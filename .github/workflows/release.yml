name: Release

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    name: publish
    steps:
      - uses: actions/checkout@v1
  
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: chronark/charon/api
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./service/Dockerfile
          buildargs: SERVICE=api

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: chronark/charon/filecache
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./service/Dockerfile
          buildargs: SERVICE=filecache

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: chronark/charon/geocoding
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./service/Dockerfile
          buildargs: SERVICE=geocoding
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: chronark/charon/rsyslog
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./service/Dockerfile
          buildargs: SERVICE=rsyslog
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: chronark/charon/tiles
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: ./service/Dockerfile
          buildargs: SERVICE=tiles