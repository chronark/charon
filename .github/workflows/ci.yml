name: CI

on: push
jobs:
  linting:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v1
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Install dependencies
        run: go mod download

      - name: Hadolint Action
        uses: brpaz/hadolint-action@v1.0.2

      - name: fmt
        run: go fmt ./...

      - name: vet
        run: go vet ./...

      - name: Run golangci-lint
        uses: actions-contrib/golangci-lint@v1

      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'fmt'

  testing:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v1
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Install dependencies
        run: go mod download

      - name: Unittests
        run: go test

  building:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v1
      - name: Build api
        run: docker build -t chronark/charon-api -f ./service/Dockerfile --build-arg SERVICE=api .
      - name: Build filecache
        run: docker build -t chronark/charon-filecache -f ./service/Dockerfile --build-arg SERVICE=filecache .
      - name: Build geocoding
        run: docker build -t chronark/charon-geocoding -f ./service/Dockerfile --build-arg SERVICE=geocoding .
      - name: Build rsyslog
        run: docker build -t chronark/charon-rsyslog -f ./service/Dockerfile --build-arg SERVICE=rsyslog .
      - name: Build tiles
        run: docker build -t chronark/charon-tiles -f ./service/Dockerfile --build-arg SERVICE=tiles .
     