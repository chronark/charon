version: '1.0'
stages:
  - clone
  - fmt
  - test
  - build
steps:
  main_clone:
     type: "git-clone"
     description: "Cloning main repository..."
     repo: "chronark/charon"
     revision: "${{CF_BRANCH}}"
     stage: "clone"
  fmt:
    title: fmt
    stage: fmt
    image: 'golang:1.13'
    commands:
      - go fmt ./...
      - go vet ./...

  unit_tests:
    title: Unit test
    stage: test
    image: 'golang:1.13'
    commands:
      - go test -v -covermode=atomic ./...
  build:
    type: parallel
    stage: build
    steps:
      build_api:
        title: Building api
        type: build
        stage: build
        image_name: chronark/charon.api
        working_directory: ./
        tag: modules
        dockerfile: ./service/Dockerfile
        build_arguments:
          - SERVICE=api

      build_filecache:
        title: Building filecache
        type: build
        stage: build
        image_name: chronark/charon.filecache
        working_directory: ./
        tag: modules
        dockerfile: ./service/Dockerfile
        build_arguments:
          - SERVICE=filecache

      build_geocoding:
        title: Building geocoding
        type: build
        stage: build
        image_name: chronark/charon.geocoding
        working_directory: ./
        tag: modules
        dockerfile: ./service/Dockerfile
        build_arguments:
          - SERVICE=geocoding

      build_tiles:
        title: Building tiles
        type: build
        stage: build
        image_name: chronark/charon.tiles
        working_directory: ./
        tag: modules
        dockerfile: ./service/Dockerfile
        build_arguments:
          - SERVICE=tiles

